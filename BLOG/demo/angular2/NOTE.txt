LINKS:
https://angular.io/docs/ts/latest/quickstart.html
https://github.com/angular/quickstart


DEVELOPMENT ENVIRONMENT
We need to set up our development environment:

install node and npm
create an application project folder
add a tsconfig.json to guide the TypeScript compiler
add a typings.json that identifies missing TypeScript definition files
add a package.json that defines the packages and scripts we need
add a systemjs.config.js that configures system.js
install the npm packages and typings files


1) Create a new project based on the QuickStart

  git clone  https://github.com/angular/quickstart  quickstart
  cd quickstart


2) Install npm packages
Install the npm packages described in the package.json and verify that it works:

  npm install
  npm start

The npm start command first compiles the application, then simultaneously re-compiles and runs the lite-server. Both the compiler and the server watch for file changes.

Il comando crea la directory node_modules con tutte le dipendenze.


3) npm scripts

We've captured many of the most useful commands in npm scripts defined in the package.json:

npm start - runs the compiler and a server at the same time, both in "watch mode".
npm run tsc - runs the TypeScript compiler once.
npm run tsc:w - runs the TypeScript compiler in watch mode; the process keeps running, awaiting changes to TypeScript files and re-compiling when it sees them.
npm run lite - runs the lite-server, a light-weight, static file server, written and maintained by John Papa and Christopher Martin with excellent support for Angular apps that use routing.
npm run typings - runs the typings tool.
npm run postinstall - called by npm automatically after it successfully completes package installation. This script installs the TypeScript definition files this app requires.
Here are the test related scripts:

npm test - compiles, runs and watches the karma unit tests
npm run webdriver:update - ONE TIME update for protractor end-to-end (e2e) tests
npm run e2e - run protractor e2e tests, written in JavaScript (*e2e-spec.js)


4) Nella directory app ci sono i files TipeScript (.TS). Con Sublime Text c'Ã¨ il plugin TypeScript che compila il file TS e genere il JS.